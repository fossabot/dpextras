[tool.commitizen]
name = "cz_customize"
version = "0.0.1"
tag_format = "v$version"

verson_files = [
    "version.txt"
]
update_changelog_on_bump = true
annotated_tag = true

[tool.commitizen.customize]
message_template = "{{type}}{% if scope %}({{scope}}){% endif %}{% if is_breaking_change %}!{% endif %}: {{subject}}{% if body %}\n\n{{body}}{% endif %}{% if footer %}\n\n{{footer}}{% endif %}"
example = "fix: correct minor typos in code\n\nsee the issue for details on the typos fixed\n\ncloses issue #12"
schema = "<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n(BREAKING CHANGE: )<footer>"

schema_pattern = "(build|ci|docs|feat|fix|perf|refactor|style|test|chore|revert|bump)!?(\\(\\S+\\))?:(\\s.*)"
#schema_pattern = "(build|ci|docs|feat|fix|perf|refactor|style|test|chore|revert|bump)!?(\(\S+\))?:(\s.*)"
change_type_order = ["BREAKING CHANGE", "feat", "fix", "refactor"]

[[tool.commitizen.customize.questions]]
type = "list"
name = "type"
choices = [
    {"value" = "fix", "name" = "fix: A bug fix. Correlates with PATCH in SemVer"},
    {"value" = "feat", "name" = "feat: A new feature. Correlates with MINOR in SemVer"},
    {"value" = "docs", "name" = "docs: Documentation only changes"},
    {"value" = "style", "name" = "style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"},
    {"value" = "refactor", "name" = "refactor: A code change that neither fixes a bug nor adds a feature"},
    {"value" = "perf", "name" = "perf: A code change that improves performance"},
    {"value" = "test", "name" = "test: Adding missing or correcting existing tests"},
    {"value" = "build", "name" = "build: Changes that affect the build system or external dependencies (example scopes: pip, docker, npm)"},
    {"value" = "ci", "name" = "ci: Changes to our CI configuration files and scripts (example scopes: GitLabCI)"},
    {"value" = "chore", "name" = "chore: Other changes that don't modify src or test files"},
    {"value" = "revert", "name" = "revert: Reverts a previous commit"},
]
message = "Select the type of change you are committing"

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "What is the scope of this change? (class or file name): (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "subject"
message = "[required] Write a short and imperative summary of the code changes: (lower case and no period)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "body"
message = "Provide additional contextual information about the code changes: (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "confirm"
name = "is_breaking_change"
message = "Is this a BREAKING CHANGE? Correlates with MAJOR in SemVer"
default = false

[[tool.commitizen.customize.questions]]
type = "input"
name = "footer"
message = "Footer; information about Breaking Changes and reference issues that this commit closes: (press [enter] to skip)"
